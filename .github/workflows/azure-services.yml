name: Create Azure Resources

on:
  workflow_dispatch:

jobs:
  azureResources:
    name: Create Azure resources and update settings
    runs-on: windows-latest
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - name: Github checkout
        uses: actions/checkout@v2

      - name: Get AAD Tenant ID, Subscription ID and Resource Group Name
        id: context
        uses: azure/powershell@v1
        with:
          azPSVersion: "3.1.0"
          inlineScript: |
            echo "::set-output name=subscriptionId::$((Get-AzContext).Subscription.id)"
            echo "::set-output name=tenantId::$((Get-AzContext).Tenant.id)"
            echo "::set-output name=resourceGroupName::$((Get-AzResourceGroup).ResourceGroupName)"

      - name: Deploy ARM templates
        uses: whiteducksoftware/azure-arm-action-js@v4
        id: deployArm
        with:
          scope: resourcegroup
          subscriptionId: ${{ steps.context.outputs.subscriptionId }}
          resourceGroupName: ${{ steps.context.outputs.resourceGroupName }}
          templateLocation: "./src/Infrastructure/Cloud/Arm/link-template.json"
          parameters: appNamePrefix=${{ secrets.APP_NAME_PREFIX }}
            dbAdminAadObjectId=${{ secrets.AZURE_DB_ADMIN_AAD_OBJECT_ID }}
            githubRepository=${{ github.repository }}

      - name: Update Web App name in SQL script for adding MSI user
        run: |
          ((Get-Content -path  .\src\Infrastructure\Cloud\AzureSqlDb\msi-user.sql).replace('web-app-name','${{ steps.deployArm.outputs.webAppName }}') | Set-Content -Path .\src\Infrastructure\Cloud\AzureSqlDb\msi-user.sql)

      - name: Run SQL script to add MSI user to database
        run:
          SQLCMD -S ${{ steps.deployArm.outputs.sqlServerName }}.database.windows.net
          -d ${{ steps.deployArm.outputs.sqlDbName }}
          -U ${{ secrets.AZURE_DB_ADMIN_USER }}
          -P ${{ secrets.AZURE_DB_ADMIN_PASSWORD }}
          -i "./src/Infrastructure/Cloud/AzureSqlDb/msi-user.sql" -G

      - name: Update Web App App Settings
        id: appSettings
        uses: azure/appservice-settings@v1
        with:
          app-name: ${{ steps.deployArm.outputs.webAppName }}
          app-settings-json: '[
            { "name": "AzureAd__TenantId", "value": "${{ steps.context.outputs.tenantId }}",  "slotSetting": false  },
            { "name": "KeyVaultName", "value": "${{steps.deployArm.outputs.keyVaultName}}",  "slotSetting": false  },
            {
            "name": "AzureAd__ClientId",
            "value": "https://api.${{ steps.deployArm.outputs.webAppName }}.azurewebsites.net",
            "slotSetting": false
            },
            {
            "name": "RedisCache__clientName",
            "value": "${{ steps.deployArm.outputs.redisCacheName }}.redis.cache.windows.net:6380",
            "slotSetting": false
            },
            {
            "name": "AzureSearch__accountName",
            "value": "${{ steps.deployArm.outputs.azureSearchName}}",
            "slotSetting": false
            },
            {
            "name": "AzureStorageAccount__accountName",
            "value": "${{ steps.deployArm.outputs.storageAccountName }}",
            "slotSetting": false
            }
            ]'
          connection-strings-json: '[
            {
            "name" : "DefaultConnection",
            "value": "Server=tcp:${{ steps.deployArm.outputs.sqlServerName }}.database.windows.net,1433;Initial Catalog=${{ steps.deployArm.outputs.sqlDbName }};Encrypt=True;TrustServerCertificate=True;Connection Timeout=30;",
            "type": "SQLServer",
            "slotSetting": false
            }
            ]'
          general-settings-json: '{
            "use32BitWorkerProcess": false,
            "remoteDebuggingEnabled": false,
            "alwaysOn": "false",
            "webSocketsEnabled": "false"
            }'

      - name: Display Web App url
        run: echo ${{ steps.appSettings.outputs.webapp-url}}
